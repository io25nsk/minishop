09.10.2024
Задача: Реализация системы корзины покупок с оплатой и возвратом товара на базе FastAPI и MongoDB.

Описание задачи:

Необходимо разработать REST API для системы интернет-магазина, которое включает три основных модуля:

Корзина покупок
Оплата
Возврат товара
Данные о продуктах и заказах хранятся в MongoDB. Пользователь может добавлять товары в корзину, оформлять заказ с оплатой,
а также делать возврат заказанных товаров.

Требования:

1. Корзина покупок:
Добавление товара в корзину:
Endpoint POST /cart/add/ принимает ID товара и его количество, добавляет товар в корзину пользователя. Если товар уже в корзине — увеличивает его количество.
Удаление товара из корзины:
Endpoint DELETE /cart/remove/ удаляет товар из корзины пользователя.
Просмотр содержимого корзины:
Endpoint GET /cart/ возвращает текущее содержимое корзины пользователя: список товаров с их количеством и общей стоимостью.
2. Оформление заказа и оплата:
Создание заказа:
Endpoint POST /order/create/ создает новый заказ на основе содержимого корзины. После успешного создания заказа корзина очищается.
Оплата заказа:
Endpoint POST /order/pay/ принимает данные для оплаты (например, платежную систему или имитацию платежа) и помечает заказ как оплаченный.
Статус заказа обновляется на "Оплачено".
Валидация: нельзя оплатить заказ, если корзина пуста или если он уже оплачен.
3. Возврат товара:
Запрос на возврат:
Endpoint POST /order/{order_id}/return/ создает запрос на возврат одного или нескольких товаров из заказа.
Возврат возможен только для оплаченных заказов. После успешного возврата статус заказа обновляется на "Возвращено".
Просмотр статуса возврата:
Endpoint GET /order/{order_id}/return_status/ возвращает текущий статус возврата для заказа.
Дополнительное задание:
Реализовать таймаут для оплаты (например, заказ должен быть оплачен в течение 30 минут после его создания, иначе он аннулируется).
Реализовать управление скидками: возможность добавлять скидки к товарам и к корзине.
Обеспечить историю заказов: возможность получить все прошлые заказы пользователя с их статусами.
Стек технологий:
FastAPI для создания API.
MongoDB для хранения данных о товарах, корзине и заказах.
ODM (например, Motor или PyMongo) для взаимодействия с базой данных.
Платежные системы могут быть симулированы или можно использовать сторонний сервис (Stripe, PayPal).
Требования к выполнению задачи:

Использовать асинхронные функции FastAPI.
Обеспечить валидацию данных с использованием Pydantic.
Разработать обработку ошибок: неправильные данные, попытка оплаты несуществующего или уже оплаченного заказа, возврат товара из неоплаченного заказа и т.д.
Реализовать работу с MongoDB для хранения товаров, корзины и заказов.

Дополнительно покрыть тестами используя pytest.
Сделать моки системы оплаты.
Описать проект в Readme.
Да будет плюсом если все будет реализовано асинхронно и будут проведены нагрузочные тесты.
